ja:
  messages:
    need_restart: fluentd-uiの再起動が必要です
    please_sign_in: ログイン
    destroy_succeed_fluentd_setting: fluentdの設定を削除しました
    available_new_fluentd_ui: 'fluentd-ui %{version}にアップデートできます。<a href="%{update_url}">システム情報ページへ</a>'

  terms: &terms
    sign_in: ログイン
    sign_out: ログアウト
    uninstall: アンインストール
    install: インストール
    install_latest: 最新版をインストール
    installed_plugins: インストール済みプラグイン
    upgrade: アップグレード
    installed: インストール済み
    not_installed: 未インストール
    new_version: "%{version}があります"
    plugins: プラグイン
    misc: その他
    version: バージョン
    fluent_version: "fluentd %{version}"
    no_alert: 通知なし
    update_password: パスワード更新
    detail: 詳細
    create: 作成
    update: 更新
    edit: 編集
    destroy: 削除
    new: 新規作成
    setup: "%{target}をセットアップ"
    install_it: "%{target}をインストール"
    installing: "インストール中: %{target}"
    uninstalling: "アンインストール中: %{target}"
    search: 検索
    changeme_password: 'パスワードを初期設定から<a href="/user">変更</a>してください'
    destroy_confirm_title: "%{target}を削除"
    confirm_body: |
      %{action}しますか？
    reload_log: ログ更新
    auto_reload: "自動更新(%{seconds}秒ごと)"
    next: 次へ
    prev: 前へ
    advanced_setting: 高度な設定
    notice_restart_for_config_edit: ※更新するとfluentdが再起動されます
    lines: 行

  plugins:
    notice_restart_for_config_edit: ※更新するとfluentdが再起動されます
    view_on_rubygems_org: rubygems.orgで見る
    common: &plugin_common
      <<: *terms
      name: プラグイン名
      status: 状態
      authors: 作者
      summary: 概要
      category: カテゴリ
      installed_version: インストール済みバージョン
      latest_version: 最新バージョン
      install_specific_version: このバージョンをインストール
      install_latest_version: 最新バージョンをインストール
      no_updates: 更新されたプラグインはありません
      no_installed: インストールされたプラグインはありません
      installed: &installed インストール済みプラグイン
      recommended: &recommended おすすめプラグイン
      updated: &updated 更新のあったプラグイン
    installed:
      <<: *plugin_common
      page_title: *installed
    recommended:
      <<: *plugin_common
      page_title: *recommended
    updated:
      <<: *plugin_common
      page_title: *updated

  users: &users
    show:
      <<: *terms
      page_title: パスワード管理

  fluentd: &fluentd
    common: &fluentd_common
      <<: *terms
      start: 開始
      stop: 停止
      restart: 再起動
      log: ログ
      stopped: 停止中
      running: 稼働中
      operation: プロセス詳細
      edit_config: 設定ファイルの編集
      config_file: 設定ファイル
      page_title: "%{label}"
      setup_in_tail: ファイル読み込みの設定
      finish: 設定する
      fluentd_info: 設定情報
      recent_errors: "直近 %{days} 日内のエラー"
      raw_log_link: ログファイルをダウンロード
      destroy_fluentd_setting: fluentdの設定情報を削除
      destroy_fluentd_setting_warning: |
        fluentdの設定を削除します。
        
        <p>起動中のfluentdは停止し、ログや設定ファイルはそのまま残存します。</p>
    form:
      <<: *fluentd_common
    show:
      <<: *fluentd_common
      page_title: "%{label}"
    new:
      <<: *fluentd_common
      page_title: fluentd | 追加
    edit:
      <<: *fluentd_common
      page_title: fluentd | 編集
    log:
      <<: *fluentd_common
      page_title: fluentd ログ
      error_is_empty: エラーはありません
    settings:
      <<: *fluentd_common
      show:
        <<: *fluentd_common
        page_title: fluentd 設定
      edit:
        <<: *fluentd_common
      in_tail_option_guide: |
        <a target="_blank" href="http://docs.fluentd.org/ja/articles/in_tail">in_tailプラグインの解説ページ</a>や
        <a target="_blank" href="http://fluentular.herokuapp.com/">Fluentular</a>もご参照ください。
      in_tail:
        <<: *fluentd_common
        restart_from_first: 最初からやり直す
        grok_manual: |
          <p>
          Grokの記法が使えます。例えば<code>%{INT:foo}</code>とすると、<code>/(?&lt;foo&gt;(?:[+-]?(?:[0-9]+)))/</code>という正規表現に変換されます。
          </p>
          <p>
          使えるキー・値については<a href="http://grokdebug.herokuapp.com/patterns" target="_blank">リファレンス</a>をご確認ください。
          </p>
          <p>
            <h4>例</h4>

            <code>Nov 29 17:02:55 MacBook-Pro-2.local UserEventAgent[239] : cannot find fw daemon port 1102</code>というログに対し、<br />
            <code>%{MONTH:month}%{SPACE}%{MONTHDAY:day} %{TIME:time} %{DATA} \[%{INT:pid}\]</code>というパターンを適用すると以下の結果が得られます。

            <table class="table">
            <thead>
            <tr>
            <th>キー名</th>
            <th>値</th>
            </tr>
            </thead>

              <tr>
              <th>month</th><td>Nov</td>
              </tr>
              <tr>
              <th>day</th><td>29</td>
              </tr>
              <tr>
              <th>time</th><td>17:02:55</td>
              </tr>
              <tr>
              <th>pid</th><td>239</td>
              </tr>
            </table>
          </p>
        show:
          page_title: "ファイル読み込み | ファイルの選択"
        after_file_choose:
          page_title: "ファイル読み込み | フォーマットの設定"
        after_format:
          page_title: "ファイル読み込み | その他の設定"
        confirm:
          page_title: "ファイル読み込み | 確認"

  misc:
    common: &misc_common
      <<: *terms
    information:
      <<: *misc_common
      env: 環境変数
      env_key: キー
      env_value: 値
      page_title: システム情報
      update_fluentd_ui: fluentd-uiを更新
      update_fluentd_ui_caution: ※fluentdは再起動されません
    update_fluentd_ui:
      <<: *misc_common
      update_title: fluentd-ui 更新
      updating: 更新中
      update_finish: 更新が完了しました

  tutorials:
    common: &tutorials_common
      <<: *terms
    index:
      <<: *tutorials_common
      page_title: チュートリアル
      step1: "fluentdをセットアップ"
      step2: "fluentdを起動"
      start_tutorial: "チュートリアルを始める"
    chapter1:
      <<: *tutorials_common
      page_title: "Chapter 1 | データを渡してみる"
      description: fluentdに任意のデータをJSONで送ることができます。URLのパスがタグの名前になります。
      learn_more: |
        他にもin_tail, in_syslogなどのinputプラグインがあります。
        <a href="http://docs.fluentd.org/ja/articles/input-plugin-overview">Learn More</a>
      send: 送信
    chapter2:
      <<: *tutorials_common
      page_title: "Chapter 2 | in_httpとout_stdout"
      lesson_markdown: |
        fluentdの起動時にこのようなログがあるかと思います。

            2014-06-05 14:43:14 +0900 [info]: adding source type="http"
            2014-06-05 14:43:14 +0900 [info]: adding match pattern="debug.*" type="stdout"

        この1行目でhttpが有効化されています。これでHTTPリクエストを受け付けるようになります。

        2行目でstdoutが有効化されています。受け取ったデータのうち、タグが`debug.*`にマッチするものはstdoutへと渡されます。

        この2つはfluent.confでそれぞれ次のように設定されています。

            <source>
              type http
              port %{http_port}
            </source>

            <match debug.*>
              type stdout
            </match>
    chapter3:
      <<: *tutorials_common
      page_title: "Chapter 3 | fluentdを構築しよう！"
      lesson_markdown: |
        fluentdはHTTP以外にも[syslogプロトコル](http://docs.fluentd.org/ja/articles/in_syslog)や[ファイル](http://docs.fluentd.org/ja/articles/in_tail)を入力として受け取ることができます。

        また出力についても、stdout以外に[MongoDB](http://docs.fluentd.org/ja/articles/out_mongo)や[AWS S3](http://docs.fluentd.org/ja/articles/out_s3)などを出力先として指定できます。

        ![fluentd](/fluentd.png)

        これらはプラグインとして提供されています。プラグインをインストールし、設定ファイルに追記してfluentdを再起動すると使用可能となります。

        [数多くのプラグイン](/plugins/recommended)がありますので、用途にあったものを探して使いましょう！ 設定ファイルは[ここから編集できます。](%{edit_config_url})
    chapter4:
      <<: *tutorials_common
      page_title: "Chapter 4 | 設定事例"
      lesson_markdown: |
        ### 例：Apacheの5xxレスポンスを検知してメールを送る

        **必要なプラグイン**

        - fluent-plugin-grepcounter
        - fluent-plugin-mail

        **設定ファイル例**

            <source>
              type tail
              format apache2
              path /var/log/apache2/access.log #This is the location of your Apache log
              tag apache.access
            </source>

            <match apache.access>
              type grepcounter
              count_interval 3         # Time window to grep and count the # of events
              input_key code           # We look at the (http status) "code" field
              regexp ^5\d\d$           # This regexp matches 5xx status codes
              threshold 1              # The # of events to trigger emitting an output
              add_tag_prefix error_5xx # The output event's tag will be error_5xx.apache.access
            </match>
        
            <match error_5xx.apache.access>
              # The event that comes here looks like
              # {
              #   "count":1,
              #   "input_tag":"error_5xx.apache.access",
              #   "input_tag_last":"access",
              #   "message":[500]
              # }

              type mail
              host smtp.gmail.com       # This is for Gmail and Google Apps. Any SMTP server should work
              port 587                  # port for smtp.gmail.com
              user example@gmail.com    # your Gmail here for login
              password XXXXXX           # Gmail password
              enable_starttls_auto true # Gmail required this

              from YOUR_SENDER_EMAIL_HERE
              to   YOUR_RECIPIENT_EMAIL_HERE
              subject [URGENT] APACHE 5XX ERROR
              message Total 5xx error count: %s\n\nPlease check your Apache webserver ASAP
              message_out_keys count # The value of 'count' will be substituted into %s above.
            </match>

        **処理の流れ**

            [log file] -> 
              (in_tail) ->
                apache.accessタグでfluentdに取り込む ->
              (apache.accessにマッチ) ->
                grepcounterがタグにprefixを追加して再送 ->
              (error_5xx.apache.accessにマッチ) ->
                mailがメール送信
    chapter5:
      <<: *tutorials_common
      page_title: "Chapter 5 | チュートリアル完了"
      lesson_markdown: |
        以上でチュートリアルは終了です。お疲れさまでした！

        関連リソース：

        - [クイックスタートガイド](http://docs.fluentd.org/ja/articles/quickstart)
        - [メーリングリスト](https://groups.google.com/forum/?fromgroups#!forum/fluentd)
        - [ソースコード(GitHub)](https://github.com/fluent/fluentd)
        - [Twitter @fluentd](https://twitter.com/fluentd)

  error:
    login_failed: ログインに失敗しました。
    fluentd_start_failed: fluentdの起動に失敗しました。
    fluentd_stop_failed: fluentdの停止に失敗しました。
    fluentd_restart_failed: fluentdの再起動に失敗しました。

  errors:
    messages: &error_messages
      wrong_password: が違います
      lack_read_permission: の読み込み権限がありません
      lack_write_permission: の書き込み権限がありません
      is_a_directory: はディレクトリです。ファイルを指定してください
      duplicated_conf: 同じ内容の設定がすでに存在しています

  activemodel: &activemodel
    errors:
      messages:
        <<: *error_messages

    models:
      user: user  #g

    attributes:
      user:
        name: 名前
        password_digest: password_digest  #g
        remember_token: remember_token  #g
        current_password: 現在のパスワード
        password: パスワード
        password_confirmation: パスワード(確認)
      fluentd:
        log_file: ログファイル
        pid_file: PIDファイル
        config_file: 設定ファイル
        variant: タイプ
        api_endpoint: APIエンドポイント

  activerecord: # for rspec
    <<: *activemodel
